<?xml version="1.0" ?>
<sdf version="1.4">
  <model name="mobility_testbed">

    <link name="base">
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <inertia>
          <ixx>0.9</ixx>
          <ixy>0.009</ixy>
          <ixz>0.009</ixz>
          <iyy>0.9</iyy>
          <iyz>0.009</iyz>
          <izz>10.5</izz>
        </inertia>
        <mass>100</mass>
      </inertial>

      <collision name="base_collision">
        <pose>0 0 0.153 0 0 0</pose>
        <geometry>
	  <box>
	    <size>1 .5 .2</size>
	  </box>
          <!-- <mesh>
            <uri>model://kurts_test_platform/test-platform.dae</uri>
          </mesh> -->
        </geometry>
      </collision>

      <visual name="base_visual">
        <pose>0 0 0 0 0 -1.570700</pose>
        <geometry>
	  <!-- <box>
	    <size>1 .5 .2</size>
	  </box> -->
          <mesh>
            <uri>model://mobility_testbed/test-platform.dae</uri>
            <scale>.75 .75 .75</scale>
          </mesh>
        </geometry>
      </visual>

      <collision name="front_wheel_collision">
        <pose>0.5 0 0.017000 0 1.570700 1.570700</pose>
        <geometry>
          <sphere>
            <radius>0.018000</radius>
          </sphere>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0</mu>
              <mu2>0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <!-- <visual name="front_wheel_visual">
        <pose>0.5 0 0.017000 0 1.570700 1.570700</pose>
        <geometry>
          <sphere>
            <radius>0.009000</radius>
          </sphere>
        </geometry>
      </visual> -->

      <collision name="rear_wheel_collision">
        <pose>-0.5 0 0.017 0 1.5707 1.5707</pose>
        <geometry>
          <sphere>
            <radius>0.015000</radius>
          </sphere>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0</mu>
              <mu2>0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <!-- <visual name="rear_wheel_visual">
        <pose>-0.5 0 0.017000 0 1.570700 1.570700</pose>
        <geometry>
          <sphere>
            <radius>0.007500</radius>
          </sphere>
        </geometry>
      </visual> -->






    </link>


    <link name="left_wheel">
      <pose>0 0.33 0.1 0 0 0</pose>
      <inertial>
        <inertia>
          <ixx>0.1000</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.1000</iyy>
          <iyz>0</iyz>
          <izz>0.1000</izz>
        </inertia>
        <mass>1</mass>
      </inertial>
      <collision name="collision">
        <pose>0 0 0 0 1.570700 1.570700</pose>
        <geometry>
          <cylinder>
            <radius>0.1</radius>
            <length>0.1524</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>10</mu>
              <mu2>10</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <!-- <visual name="visual">
        <pose>0 0 0 0 1.570700 1.570700</pose>
        <geometry>
          <cylinder>
            <radius>0.1</radius>
            <length>0.1524</length>
          </cylinder>
        </geometry>
      </visual> -->
    </link>

    <link name="right_wheel">
      <pose>0 -0.33 0.1 0 0 0</pose>
      <inertial>
        <inertia>
          <ixx>0.1000</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.1000</iyy>
          <iyz>0</iyz>
          <izz>0.1000</izz>
        </inertia>
        <mass>1</mass>
      </inertial>
      <collision name="collision">
        <pose>0 0 0 0 1.570700 1.570700</pose>
        <geometry>
          <cylinder>
            <radius>0.1</radius>
            <length>0.1524</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>10</mu>
              <mu2>10</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <!-- <visual name="visual">
        <pose>0 0 0 0 1.570700 1.570700</pose>
        <geometry>
          <cylinder>
            <radius>0.1</radius>
            <length>0.1524</length>
          </cylinder>
        </geometry>
      </visual> -->
    </link>

    <joint name="left_wheel" type="revolute">
      <parent>base</parent>
      <child>left_wheel</child>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>

    <joint name="right_wheel" type="revolute">
      <parent>base</parent>
      <child>right_wheel</child>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>






<!-- start left camera definition -->
  <joint name="left_camera_joint" type="revolute">
      <parent>base</parent>
      <child>left_camera_link</child>
	  <axis>
	    <xyz>0 1 0</xyz>
	    <limit>
	      <upper>0</upper>
	      <lower>0</lower>
	    </limit>
	  </axis>
  </joint>
  <link name="left_camera_link">
	<collision name='collision'>
	  <pose>0.40 0.06 0.50 0 0 -1.5707</pose>
	  <geometry>
	    <box>
	      <size>.05 .03 .04</size>
	    </box>
	  </geometry>
	</collision>

	<visual name='visual'>
	  <pose>0.40 0.10 0.50 0 0 -1.5707</pose>
	  <geometry>
	    <box>
	      <size>.05 .03 .04</size>
	    </box>
	    <!-- <mesh>
	      <uri>model://kurts_sensor_sonic/ultrasonic-sensor.dae</uri>
	      <scale>1.5 1.5 1.5</scale>
	    </mesh> -->
	  </geometry>
	</visual>
    <sensor type="camera" name="left_camera">
	  <pose>0.40 0.06 0.50 0 0 0</pose>
      <update_rate>24.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>600</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>/left_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>left_camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </link>
<!-- end camera definition -->







<!-- start right camera definition -->
  <joint name="right_camera_joint" type="revolute">
      <parent>base</parent>
      <child>right_camera_link</child>
	  <axis>
	    <xyz>0 1 0</xyz>
	    <limit>
	      <upper>0</upper>
	      <lower>0</lower>
	    </limit>
	  </axis>
  </joint>
  <link name="right_camera_link">
	<collision name='collision'>
	  <pose>0.40 -0.06 0.50 0 0 -1.5707</pose>
	  <geometry>
	    <box>
	      <size>.05 .03 .04</size>
	    </box>
	  </geometry>
	</collision>

	<visual name='visual'>
	  <pose>0.40 -0.06 0.50 0 0 -1.5707</pose>
	  <geometry>
	    <box>
	      <size>.05 .03 .04</size>
	    </box>
	    <!-- <mesh>
	      <uri>model://kurts_sensor_sonic/ultrasonic-sensor.dae</uri>
	      <scale>1.5 1.5 1.5</scale>
	    </mesh> -->
	  </geometry>
	</visual>
    <sensor type="camera" name="right_camera">
	  <pose>0.40 -0.10 0.50 0 0 0</pose>
      <update_rate>24.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>600</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>/right_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>right_camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </link>
<!-- end camera definition -->








  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>10</updateRate>
    <leftJoint>left_wheel</leftJoint>
    <rightJoint>right_wheel</rightJoint>
    <wheelSeparation>0.6</wheelSeparation>
    <wheelDiameter>0.2</wheelDiameter>
    <torque>20</torque>
    <commandTopic>/cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>base_footprint</robotBaseFrame>
  </plugin>



  </model>
</sdf>





